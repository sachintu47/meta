{
    "cmake": {
        "20250402_145954": {
            "release_name": "cmake (Build 3201) - (STABLE)",
            "commit_sha": "9fe70fd76412f41ab2bec24ba42b081b48691961",
            "CVEs": [
                {
                    "id": "CVE-2025-9301",
                    "details": "A vulnerability was determined in cmake 4.1.20250725-gb5cce23. This affects the function cmForEachFunctionBlocker::ReplayItems of the file cmForEachCommand.cxx. This manipulation causes reachable assertion. The attack needs to be launched locally. The exploit has been publicly disclosed and may be utilized. Patch name: 37e27f71bc356d880c908040cd0cb68fa2c371b8. It is suggested to install a patch to address this issue.",
                    "published": "2025-08-21T14:15:44Z",
                    "severity": "LOW"
                }
            ]
        },
        "20250129_182555": {
            "release_name": "cmake (Build 2914) - (STABLE)",
            "commit_sha": "41abd532b64f178017ed4ffdbdb5af42d9056a8d",
            "CVEs": [
                {
                    "id": "CVE-2025-9301",
                    "details": "A vulnerability was determined in cmake 4.1.20250725-gb5cce23. This affects the function cmForEachFunctionBlocker::ReplayItems of the file cmForEachCommand.cxx. This manipulation causes reachable assertion. The attack needs to be launched locally. The exploit has been publicly disclosed and may be utilized. Patch name: 37e27f71bc356d880c908040cd0cb68fa2c371b8. It is suggested to install a patch to address this issue.",
                    "published": "2025-08-21T14:15:44Z",
                    "severity": "LOW"
                }
            ]
        },
        "20250103_171249": {
            "release_name": "cmake (Build 2795) - (STABLE)",
            "commit_sha": "41abd532b64f178017ed4ffdbdb5af42d9056a8d",
            "CVEs": [
                {
                    "id": "CVE-2025-9301",
                    "details": "A vulnerability was determined in cmake 4.1.20250725-gb5cce23. This affects the function cmForEachFunctionBlocker::ReplayItems of the file cmForEachCommand.cxx. This manipulation causes reachable assertion. The attack needs to be launched locally. The exploit has been publicly disclosed and may be utilized. Patch name: 37e27f71bc356d880c908040cd0cb68fa2c371b8. It is suggested to install a patch to address this issue.",
                    "published": "2025-08-21T14:15:44Z",
                    "severity": "LOW"
                }
            ]
        }
    },
    "vim": {
        "20250907_232548": {
            "release_name": "vim 9.1.697 (datasetio_ispf) - (STABLE)",
            "commit_sha": "322ba9108612bead5eb7731ccb66763dec69ef1b",
            "CVEs": [
                {
                    "id": "CVE-2024-45306",
                    "details": "Vim is an open source, command line text editor. Patch v9.1.0038 optimized how the cursor position is calculated and removed a loop, that verified that the cursor position always points inside a line and does not become invalid by pointing beyond the end of\na line. Back then we assumed this loop is unnecessary. However, this change made it possible that the cursor position stays invalid and points beyond the end of a line, which would eventually cause a heap-buffer-overflow when trying to access the line pointer at\nthe specified cursor position. It's not quite clear yet, what can lead to this situation that the cursor points to an invalid position. That's why patch v9.1.0707 does not include a test case. The only observed impact has been a program crash. This issue has been addressed in with the patch v9.1.0707. All users are advised to upgrade.",
                    "published": "2024-09-02T18:15:36Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250731_175213": {
            "release_name": "vim (Build 3632) - (STABLE)",
            "commit_sha": "af9a7a04f18693eee4400dd134135527f4e8cd5f",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250728_205054": {
            "release_name": "vim (Build 3601) - (STABLE)",
            "commit_sha": "af9a7a04f18693eee4400dd134135527f4e8cd5f",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250726_152639": {
            "release_name": "vim (Build 3594) - (STABLE)",
            "commit_sha": "af9a7a04f18693eee4400dd134135527f4e8cd5f",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250723_152838": {
            "release_name": "vim (Build 3585) - (STABLE)",
            "commit_sha": "13e1af7de9daba5f617d24295b8aaf894bf8c201",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250720_153237": {
            "release_name": "vim (Build 3569) - (STABLE)",
            "commit_sha": "88b735973c4c40b1b97620fbf90695944dbde85f",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250716_152831": {
            "release_name": "vim (Build 3560) - (STABLE)",
            "commit_sha": "3f9d2378bd70748fc59e02a402422269bd096492",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250714_152835": {
            "release_name": "vim (Build 3551) - (STABLE)",
            "commit_sha": "f6a308c65bfe881535ea924028b9386fbd3ba4da",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250709_152634": {
            "release_name": "vim (Build 3542) - (STABLE)",
            "commit_sha": "1adada0158705f2f508e328362f83a67e4707cce",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250705_152634": {
            "release_name": "vim (Build 3529) - (STABLE)",
            "commit_sha": "5e34eec6f83222b1aa55c19d5f8f657d76d39121",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250702_153637": {
            "release_name": "vim (Build 3515) - (STABLE)",
            "commit_sha": "b84ab0288f36145b4e9c095f68bf673ad6f69cd4",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250626_152703": {
            "release_name": "vim (Build 3495) - (STABLE)",
            "commit_sha": "1c2c4ecb4c46524841e714c3a41085d60c13ee6d",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250619_153808": {
            "release_name": "vim (Build 3474) - (STABLE)",
            "commit_sha": "8e83105798f07b78e638f5e651462d84bcd84f59",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250619_153444": {
            "release_name": "vim (Build 3473) - (STABLE)",
            "commit_sha": "8e83105798f07b78e638f5e651462d84bcd84f59",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250615_171057": {
            "release_name": "vim (Build 3463) - (STABLE)",
            "commit_sha": "e5297e39b3b7fcc1da55ef7869cc0c7714b01bc2",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250611_152631": {
            "release_name": "vim (Build 3457) - (STABLE)",
            "commit_sha": "a304e49790280d9e3201648eb5ec8ba1ac55b175",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250608_153435": {
            "release_name": "vim (Build 3438) - (STABLE)",
            "commit_sha": "9cb27a57c86755ae3fabdd028993548a466ac223",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250608_152435": {
            "release_name": "vim (Build 3437) - (STABLE)",
            "commit_sha": "9cb27a57c86755ae3fabdd028993548a466ac223",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250605_152627": {
            "release_name": "vim (Build 3429) - (STABLE)",
            "commit_sha": "862cb37544c71800fdedc3e84454185f21685c6a",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250531_153425": {
            "release_name": "vim (Build 3406) - (STABLE)",
            "commit_sha": "54a09e7e861f314965cb1492ee6754c6d5daf653",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250531_152439": {
            "release_name": "vim (Build 3404) - (STABLE)",
            "commit_sha": "54a09e7e861f314965cb1492ee6754c6d5daf653",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250527_153429": {
            "release_name": "vim (Build 3365) - (STABLE)",
            "commit_sha": "7c621052c3f180c1ef70fb7abfdad18245f47fcc",
            "CVEs": [
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250526_010125": {
            "release_name": "vim (Build 3351) - (STABLE)",
            "commit_sha": "e89aef3f65388a8b627c77f250525f2a264716c5",
            "CVEs": [
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250515_154223": {
            "release_name": "vim (Build 3334) - (STABLE)",
            "commit_sha": "e89aef3f65388a8b627c77f250525f2a264716c5",
            "CVEs": [
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250512_115527": {
            "release_name": "vim (Build 3315) - (STABLE)",
            "commit_sha": "a2c5559f297a18dc1ce3c4f1f9fd6204aed321c9",
            "CVEs": [
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250402_153226": {
            "release_name": "vim (Build 3192) - (STABLE)",
            "commit_sha": "a2c5559f297a18dc1ce3c4f1f9fd6204aed321c9",
            "CVEs": [
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250305_131404": {
            "release_name": "vim (Build 3153) - (STABLE)",
            "commit_sha": "a2c5559f297a18dc1ce3c4f1f9fd6204aed321c9",
            "CVEs": [
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250226_170120": {
            "release_name": "vim 9.1.1016.0 (zusage) - (STABLE)",
            "commit_sha": "1aefe1de0b20fe4966863e07efa14b6aa87323ee",
            "CVEs": [
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250219_172824": {
            "release_name": "vim (Build 3115) - (STABLE)",
            "commit_sha": "35e02af7bf3086b7ad572113fd7c647535bd6605",
            "CVEs": [
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250216_161352": {
            "release_name": "vim (Build 3107) - (STABLE)",
            "commit_sha": "35e02af7bf3086b7ad572113fd7c647535bd6605",
            "CVEs": [
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250131_113109": {
            "release_name": "vim (Build 3052) - (STABLE)",
            "commit_sha": "1aefe1de0b20fe4966863e07efa14b6aa87323ee",
            "CVEs": [
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250130_231821": {
            "release_name": "vim (Build 2958) - (STABLE)",
            "commit_sha": "1aefe1de0b20fe4966863e07efa14b6aa87323ee",
            "CVEs": [
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20250114_184833": {
            "release_name": "vim (Build 2810) - (STABLE)",
            "commit_sha": "1aefe1de0b20fe4966863e07efa14b6aa87323ee",
            "CVEs": [
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20241118_041149": {
            "release_name": "vim (Build 2736) - (STABLE)",
            "commit_sha": "9848face747ba91282d34a96dcb966bcb410bf2b",
            "CVEs": [
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20241029_002028": {
            "release_name": "vim (Build 2697) - (STABLE)",
            "commit_sha": "4298c5f472a05486d6e26988cf10f4d04c80afd2",
            "CVEs": [
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20241001_210444": {
            "release_name": "vim (Build 2493) - (STABLE)",
            "commit_sha": "4298c5f472a05486d6e26988cf10f4d04c80afd2",
            "CVEs": [
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20240923_045240": {
            "release_name": "vim (Build 2461) - (STABLE)",
            "commit_sha": "4298c5f472a05486d6e26988cf10f4d04c80afd2",
            "CVEs": [
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20240920_181950": {
            "release_name": "vim (Build 2436) - (STABLE)",
            "commit_sha": "4298c5f472a05486d6e26988cf10f4d04c80afd2",
            "CVEs": [
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20241105_065410": {
            "release_name": "vim (Build 2423) - (Alpha) - Dataset I/O",
            "commit_sha": "322ba9108612bead5eb7731ccb66763dec69ef1b",
            "CVEs": [
                {
                    "id": "CVE-2024-45306",
                    "details": "Vim is an open source, command line text editor. Patch v9.1.0038 optimized how the cursor position is calculated and removed a loop, that verified that the cursor position always points inside a line and does not become invalid by pointing beyond the end of\na line. Back then we assumed this loop is unnecessary. However, this change made it possible that the cursor position stays invalid and points beyond the end of a line, which would eventually cause a heap-buffer-overflow when trying to access the line pointer at\nthe specified cursor position. It's not quite clear yet, what can lead to this situation that the cursor points to an invalid position. That's why patch v9.1.0707 does not include a test case. The only observed impact has been a program crash. This issue has been addressed in with the patch v9.1.0707. All users are advised to upgrade.",
                    "published": "2024-09-02T18:15:36Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20240829_180335": {
            "release_name": "vim (Build 2421) - (STABLE)",
            "commit_sha": "322ba9108612bead5eb7731ccb66763dec69ef1b",
            "CVEs": [
                {
                    "id": "CVE-2024-45306",
                    "details": "Vim is an open source, command line text editor. Patch v9.1.0038 optimized how the cursor position is calculated and removed a loop, that verified that the cursor position always points inside a line and does not become invalid by pointing beyond the end of\na line. Back then we assumed this loop is unnecessary. However, this change made it possible that the cursor position stays invalid and points beyond the end of a line, which would eventually cause a heap-buffer-overflow when trying to access the line pointer at\nthe specified cursor position. It's not quite clear yet, what can lead to this situation that the cursor points to an invalid position. That's why patch v9.1.0707 does not include a test case. The only observed impact has been a program crash. This issue has been addressed in with the patch v9.1.0707. All users are advised to upgrade.",
                    "published": "2024-09-02T18:15:36Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20240823_220003": {
            "release_name": "vim (Build 2408) - (STABLE)",
            "commit_sha": "3f7024cf865bb9790988e24909ec3e37427555e7",
            "CVEs": [
                {
                    "id": "CVE-2024-45306",
                    "details": "Vim is an open source, command line text editor. Patch v9.1.0038 optimized how the cursor position is calculated and removed a loop, that verified that the cursor position always points inside a line and does not become invalid by pointing beyond the end of\na line. Back then we assumed this loop is unnecessary. However, this change made it possible that the cursor position stays invalid and points beyond the end of a line, which would eventually cause a heap-buffer-overflow when trying to access the line pointer at\nthe specified cursor position. It's not quite clear yet, what can lead to this situation that the cursor points to an invalid position. That's why patch v9.1.0707 does not include a test case. The only observed impact has been a program crash. This issue has been addressed in with the patch v9.1.0707. All users are advised to upgrade.",
                    "published": "2024-09-02T18:15:36Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20240815_204753": {
            "release_name": "vim (Build 2389) - (STABLE)",
            "commit_sha": "c6ed816761f44da92d8c61f5ea6cb7fdbb45fac5",
            "CVEs": [
                {
                    "id": "CVE-2024-43790",
                    "details": "Vim is an open source command line text editor. When performing a search and displaying the search-count message is disabled (:set shm+=S), the search pattern is displayed at the bottom of the screen in a buffer (msgbuf). When right-left mode (:set rl) is enabled, the search pattern is reversed. This happens by allocating a new buffer. If the search pattern contains some ASCII NUL characters, the buffer allocated will be smaller than the original allocated buffer (because for allocating the reversed buffer, the strlen() function is called, which only counts until it notices an ASCII NUL byte ) and thus the original length indicator is wrong. This causes an overflow when accessing characters inside the msgbuf by the previously (now wrong) length of the msgbuf. The issue has been fixed as of Vim patch v9.1.0689.",
                    "published": "2024-08-22T22:15:05Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-45306",
                    "details": "Vim is an open source, command line text editor. Patch v9.1.0038 optimized how the cursor position is calculated and removed a loop, that verified that the cursor position always points inside a line and does not become invalid by pointing beyond the end of\na line. Back then we assumed this loop is unnecessary. However, this change made it possible that the cursor position stays invalid and points beyond the end of a line, which would eventually cause a heap-buffer-overflow when trying to access the line pointer at\nthe specified cursor position. It's not quite clear yet, what can lead to this situation that the cursor points to an invalid position. That's why patch v9.1.0707 does not include a test case. The only observed impact has been a program crash. This issue has been addressed in with the patch v9.1.0707. All users are advised to upgrade.",
                    "published": "2024-09-02T18:15:36Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20240521_211543": {
            "release_name": "vim (Build 2271) - (STABLE)",
            "commit_sha": "eff20eb35d2dba413c6d115291dd9ddea705e802",
            "CVEs": [
                {
                    "id": "CVE-2024-41957",
                    "details": "Vim is an open source command line text editor. Vim < v9.1.0647 has double free in src/alloc.c:616. When closing a window, the corresponding tagstack data will be cleared and freed. However a bit later, the quickfix list belonging to that window will also be cleared and if that quickfix list points to the same tagstack data, Vim will try to free it again, resulting in a double-free/use-after-free access exception. Impact is low since the user must intentionally execute vim with several non-default flags,\nbut it may cause a crash of Vim. The issue has been fixed as of Vim patch v9.1.0647",
                    "published": "2024-08-01T22:15:29Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-41965",
                    "details": "Vim is an open source command line text editor. double-free in dialog_changed() in Vim < v9.1.0648. When abandoning a buffer, Vim may ask the user what to do with the modified buffer. If the user wants the changed buffer to be saved, Vim may create a new Untitled file, if the buffer did not have a name yet. However, when setting the buffer name to Unnamed, Vim will falsely free a pointer twice, leading to a double-free and possibly later to a heap-use-after-free, which can lead to a crash. The issue has been fixed as of Vim patch v9.1.0648.",
                    "published": "2024-08-01T22:15:29Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-43374",
                    "details": "The UNIX editor Vim prior to version 9.1.0678 has a use-after-free error in argument list handling. When adding a new file to the argument list, this triggers `Buf*` autocommands. If in such an autocommand the buffer that was just opened is closed (including the window where it is shown), this causes the window structure to be freed which contains a reference to the argument list that we are actually modifying. Once the autocommands are completed, the references to the window and argument list are no longer valid and as such cause an use-after-free. Impact is low since the user must either intentionally add some unusual autocommands that wipe a buffer during creation (either manually or by sourcing a malicious plugin), but it will crash Vim. The issue has been fixed as of Vim patch v9.1.0678.",
                    "published": "2024-08-16T02:15:17Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-43790",
                    "details": "Vim is an open source command line text editor. When performing a search and displaying the search-count message is disabled (:set shm+=S), the search pattern is displayed at the bottom of the screen in a buffer (msgbuf). When right-left mode (:set rl) is enabled, the search pattern is reversed. This happens by allocating a new buffer. If the search pattern contains some ASCII NUL characters, the buffer allocated will be smaller than the original allocated buffer (because for allocating the reversed buffer, the strlen() function is called, which only counts until it notices an ASCII NUL byte ) and thus the original length indicator is wrong. This causes an overflow when accessing characters inside the msgbuf by the previously (now wrong) length of the msgbuf. The issue has been fixed as of Vim patch v9.1.0689.",
                    "published": "2024-08-22T22:15:05Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-45306",
                    "details": "Vim is an open source, command line text editor. Patch v9.1.0038 optimized how the cursor position is calculated and removed a loop, that verified that the cursor position always points inside a line and does not become invalid by pointing beyond the end of\na line. Back then we assumed this loop is unnecessary. However, this change made it possible that the cursor position stays invalid and points beyond the end of a line, which would eventually cause a heap-buffer-overflow when trying to access the line pointer at\nthe specified cursor position. It's not quite clear yet, what can lead to this situation that the cursor points to an invalid position. That's why patch v9.1.0707 does not include a test case. The only observed impact has been a program crash. This issue has been addressed in with the patch v9.1.0707. All users are advised to upgrade.",
                    "published": "2024-09-02T18:15:36Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20240515_203214": {
            "release_name": "vim (Build 2265) - (STABLE)",
            "commit_sha": "eff20eb35d2dba413c6d115291dd9ddea705e802",
            "CVEs": [
                {
                    "id": "CVE-2024-41957",
                    "details": "Vim is an open source command line text editor. Vim < v9.1.0647 has double free in src/alloc.c:616. When closing a window, the corresponding tagstack data will be cleared and freed. However a bit later, the quickfix list belonging to that window will also be cleared and if that quickfix list points to the same tagstack data, Vim will try to free it again, resulting in a double-free/use-after-free access exception. Impact is low since the user must intentionally execute vim with several non-default flags,\nbut it may cause a crash of Vim. The issue has been fixed as of Vim patch v9.1.0647",
                    "published": "2024-08-01T22:15:29Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-41965",
                    "details": "Vim is an open source command line text editor. double-free in dialog_changed() in Vim < v9.1.0648. When abandoning a buffer, Vim may ask the user what to do with the modified buffer. If the user wants the changed buffer to be saved, Vim may create a new Untitled file, if the buffer did not have a name yet. However, when setting the buffer name to Unnamed, Vim will falsely free a pointer twice, leading to a double-free and possibly later to a heap-use-after-free, which can lead to a crash. The issue has been fixed as of Vim patch v9.1.0648.",
                    "published": "2024-08-01T22:15:29Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-43374",
                    "details": "The UNIX editor Vim prior to version 9.1.0678 has a use-after-free error in argument list handling. When adding a new file to the argument list, this triggers `Buf*` autocommands. If in such an autocommand the buffer that was just opened is closed (including the window where it is shown), this causes the window structure to be freed which contains a reference to the argument list that we are actually modifying. Once the autocommands are completed, the references to the window and argument list are no longer valid and as such cause an use-after-free. Impact is low since the user must either intentionally add some unusual autocommands that wipe a buffer during creation (either manually or by sourcing a malicious plugin), but it will crash Vim. The issue has been fixed as of Vim patch v9.1.0678.",
                    "published": "2024-08-16T02:15:17Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-43790",
                    "details": "Vim is an open source command line text editor. When performing a search and displaying the search-count message is disabled (:set shm+=S), the search pattern is displayed at the bottom of the screen in a buffer (msgbuf). When right-left mode (:set rl) is enabled, the search pattern is reversed. This happens by allocating a new buffer. If the search pattern contains some ASCII NUL characters, the buffer allocated will be smaller than the original allocated buffer (because for allocating the reversed buffer, the strlen() function is called, which only counts until it notices an ASCII NUL byte ) and thus the original length indicator is wrong. This causes an overflow when accessing characters inside the msgbuf by the previously (now wrong) length of the msgbuf. The issue has been fixed as of Vim patch v9.1.0689.",
                    "published": "2024-08-22T22:15:05Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-45306",
                    "details": "Vim is an open source, command line text editor. Patch v9.1.0038 optimized how the cursor position is calculated and removed a loop, that verified that the cursor position always points inside a line and does not become invalid by pointing beyond the end of\na line. Back then we assumed this loop is unnecessary. However, this change made it possible that the cursor position stays invalid and points beyond the end of a line, which would eventually cause a heap-buffer-overflow when trying to access the line pointer at\nthe specified cursor position. It's not quite clear yet, what can lead to this situation that the cursor points to an invalid position. That's why patch v9.1.0707 does not include a test case. The only observed impact has been a program crash. This issue has been addressed in with the patch v9.1.0707. All users are advised to upgrade.",
                    "published": "2024-09-02T18:15:36Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20240513_030819": {
            "release_name": "vim (Build 2253) - (STABLE)",
            "commit_sha": "da0c9137d1ec96f4d79b818502d2f921a21f710e",
            "CVEs": [
                {
                    "id": "CVE-2024-41957",
                    "details": "Vim is an open source command line text editor. Vim < v9.1.0647 has double free in src/alloc.c:616. When closing a window, the corresponding tagstack data will be cleared and freed. However a bit later, the quickfix list belonging to that window will also be cleared and if that quickfix list points to the same tagstack data, Vim will try to free it again, resulting in a double-free/use-after-free access exception. Impact is low since the user must intentionally execute vim with several non-default flags,\nbut it may cause a crash of Vim. The issue has been fixed as of Vim patch v9.1.0647",
                    "published": "2024-08-01T22:15:29Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-41965",
                    "details": "Vim is an open source command line text editor. double-free in dialog_changed() in Vim < v9.1.0648. When abandoning a buffer, Vim may ask the user what to do with the modified buffer. If the user wants the changed buffer to be saved, Vim may create a new Untitled file, if the buffer did not have a name yet. However, when setting the buffer name to Unnamed, Vim will falsely free a pointer twice, leading to a double-free and possibly later to a heap-use-after-free, which can lead to a crash. The issue has been fixed as of Vim patch v9.1.0648.",
                    "published": "2024-08-01T22:15:29Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-43374",
                    "details": "The UNIX editor Vim prior to version 9.1.0678 has a use-after-free error in argument list handling. When adding a new file to the argument list, this triggers `Buf*` autocommands. If in such an autocommand the buffer that was just opened is closed (including the window where it is shown), this causes the window structure to be freed which contains a reference to the argument list that we are actually modifying. Once the autocommands are completed, the references to the window and argument list are no longer valid and as such cause an use-after-free. Impact is low since the user must either intentionally add some unusual autocommands that wipe a buffer during creation (either manually or by sourcing a malicious plugin), but it will crash Vim. The issue has been fixed as of Vim patch v9.1.0678.",
                    "published": "2024-08-16T02:15:17Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-43790",
                    "details": "Vim is an open source command line text editor. When performing a search and displaying the search-count message is disabled (:set shm+=S), the search pattern is displayed at the bottom of the screen in a buffer (msgbuf). When right-left mode (:set rl) is enabled, the search pattern is reversed. This happens by allocating a new buffer. If the search pattern contains some ASCII NUL characters, the buffer allocated will be smaller than the original allocated buffer (because for allocating the reversed buffer, the strlen() function is called, which only counts until it notices an ASCII NUL byte ) and thus the original length indicator is wrong. This causes an overflow when accessing characters inside the msgbuf by the previously (now wrong) length of the msgbuf. The issue has been fixed as of Vim patch v9.1.0689.",
                    "published": "2024-08-22T22:15:05Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-45306",
                    "details": "Vim is an open source, command line text editor. Patch v9.1.0038 optimized how the cursor position is calculated and removed a loop, that verified that the cursor position always points inside a line and does not become invalid by pointing beyond the end of\na line. Back then we assumed this loop is unnecessary. However, this change made it possible that the cursor position stays invalid and points beyond the end of a line, which would eventually cause a heap-buffer-overflow when trying to access the line pointer at\nthe specified cursor position. It's not quite clear yet, what can lead to this situation that the cursor points to an invalid position. That's why patch v9.1.0707 does not include a test case. The only observed impact has been a program crash. This issue has been addressed in with the patch v9.1.0707. All users are advised to upgrade.",
                    "published": "2024-09-02T18:15:36Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20240418_161535": {
            "release_name": "vim (Build 2224) - (STABLE)",
            "commit_sha": "da0c9137d1ec96f4d79b818502d2f921a21f710e",
            "CVEs": [
                {
                    "id": "CVE-2024-41957",
                    "details": "Vim is an open source command line text editor. Vim < v9.1.0647 has double free in src/alloc.c:616. When closing a window, the corresponding tagstack data will be cleared and freed. However a bit later, the quickfix list belonging to that window will also be cleared and if that quickfix list points to the same tagstack data, Vim will try to free it again, resulting in a double-free/use-after-free access exception. Impact is low since the user must intentionally execute vim with several non-default flags,\nbut it may cause a crash of Vim. The issue has been fixed as of Vim patch v9.1.0647",
                    "published": "2024-08-01T22:15:29Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-41965",
                    "details": "Vim is an open source command line text editor. double-free in dialog_changed() in Vim < v9.1.0648. When abandoning a buffer, Vim may ask the user what to do with the modified buffer. If the user wants the changed buffer to be saved, Vim may create a new Untitled file, if the buffer did not have a name yet. However, when setting the buffer name to Unnamed, Vim will falsely free a pointer twice, leading to a double-free and possibly later to a heap-use-after-free, which can lead to a crash. The issue has been fixed as of Vim patch v9.1.0648.",
                    "published": "2024-08-01T22:15:29Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-43374",
                    "details": "The UNIX editor Vim prior to version 9.1.0678 has a use-after-free error in argument list handling. When adding a new file to the argument list, this triggers `Buf*` autocommands. If in such an autocommand the buffer that was just opened is closed (including the window where it is shown), this causes the window structure to be freed which contains a reference to the argument list that we are actually modifying. Once the autocommands are completed, the references to the window and argument list are no longer valid and as such cause an use-after-free. Impact is low since the user must either intentionally add some unusual autocommands that wipe a buffer during creation (either manually or by sourcing a malicious plugin), but it will crash Vim. The issue has been fixed as of Vim patch v9.1.0678.",
                    "published": "2024-08-16T02:15:17Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-43790",
                    "details": "Vim is an open source command line text editor. When performing a search and displaying the search-count message is disabled (:set shm+=S), the search pattern is displayed at the bottom of the screen in a buffer (msgbuf). When right-left mode (:set rl) is enabled, the search pattern is reversed. This happens by allocating a new buffer. If the search pattern contains some ASCII NUL characters, the buffer allocated will be smaller than the original allocated buffer (because for allocating the reversed buffer, the strlen() function is called, which only counts until it notices an ASCII NUL byte ) and thus the original length indicator is wrong. This causes an overflow when accessing characters inside the msgbuf by the previously (now wrong) length of the msgbuf. The issue has been fixed as of Vim patch v9.1.0689.",
                    "published": "2024-08-22T22:15:05Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-45306",
                    "details": "Vim is an open source, command line text editor. Patch v9.1.0038 optimized how the cursor position is calculated and removed a loop, that verified that the cursor position always points inside a line and does not become invalid by pointing beyond the end of\na line. Back then we assumed this loop is unnecessary. However, this change made it possible that the cursor position stays invalid and points beyond the end of a line, which would eventually cause a heap-buffer-overflow when trying to access the line pointer at\nthe specified cursor position. It's not quite clear yet, what can lead to this situation that the cursor points to an invalid position. That's why patch v9.1.0707 does not include a test case. The only observed impact has been a program crash. This issue has been addressed in with the patch v9.1.0707. All users are advised to upgrade.",
                    "published": "2024-09-02T18:15:36Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20240320_190941": {
            "release_name": "vim (Build 2204) - (STABLE)",
            "commit_sha": "da0c9137d1ec96f4d79b818502d2f921a21f710e",
            "CVEs": [
                {
                    "id": "CVE-2024-41957",
                    "details": "Vim is an open source command line text editor. Vim < v9.1.0647 has double free in src/alloc.c:616. When closing a window, the corresponding tagstack data will be cleared and freed. However a bit later, the quickfix list belonging to that window will also be cleared and if that quickfix list points to the same tagstack data, Vim will try to free it again, resulting in a double-free/use-after-free access exception. Impact is low since the user must intentionally execute vim with several non-default flags,\nbut it may cause a crash of Vim. The issue has been fixed as of Vim patch v9.1.0647",
                    "published": "2024-08-01T22:15:29Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-41965",
                    "details": "Vim is an open source command line text editor. double-free in dialog_changed() in Vim < v9.1.0648. When abandoning a buffer, Vim may ask the user what to do with the modified buffer. If the user wants the changed buffer to be saved, Vim may create a new Untitled file, if the buffer did not have a name yet. However, when setting the buffer name to Unnamed, Vim will falsely free a pointer twice, leading to a double-free and possibly later to a heap-use-after-free, which can lead to a crash. The issue has been fixed as of Vim patch v9.1.0648.",
                    "published": "2024-08-01T22:15:29Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-43374",
                    "details": "The UNIX editor Vim prior to version 9.1.0678 has a use-after-free error in argument list handling. When adding a new file to the argument list, this triggers `Buf*` autocommands. If in such an autocommand the buffer that was just opened is closed (including the window where it is shown), this causes the window structure to be freed which contains a reference to the argument list that we are actually modifying. Once the autocommands are completed, the references to the window and argument list are no longer valid and as such cause an use-after-free. Impact is low since the user must either intentionally add some unusual autocommands that wipe a buffer during creation (either manually or by sourcing a malicious plugin), but it will crash Vim. The issue has been fixed as of Vim patch v9.1.0678.",
                    "published": "2024-08-16T02:15:17Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-43790",
                    "details": "Vim is an open source command line text editor. When performing a search and displaying the search-count message is disabled (:set shm+=S), the search pattern is displayed at the bottom of the screen in a buffer (msgbuf). When right-left mode (:set rl) is enabled, the search pattern is reversed. This happens by allocating a new buffer. If the search pattern contains some ASCII NUL characters, the buffer allocated will be smaller than the original allocated buffer (because for allocating the reversed buffer, the strlen() function is called, which only counts until it notices an ASCII NUL byte ) and thus the original length indicator is wrong. This causes an overflow when accessing characters inside the msgbuf by the previously (now wrong) length of the msgbuf. The issue has been fixed as of Vim patch v9.1.0689.",
                    "published": "2024-08-22T22:15:05Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-45306",
                    "details": "Vim is an open source, command line text editor. Patch v9.1.0038 optimized how the cursor position is calculated and removed a loop, that verified that the cursor position always points inside a line and does not become invalid by pointing beyond the end of\na line. Back then we assumed this loop is unnecessary. However, this change made it possible that the cursor position stays invalid and points beyond the end of a line, which would eventually cause a heap-buffer-overflow when trying to access the line pointer at\nthe specified cursor position. It's not quite clear yet, what can lead to this situation that the cursor points to an invalid position. That's why patch v9.1.0707 does not include a test case. The only observed impact has been a program crash. This issue has been addressed in with the patch v9.1.0707. All users are advised to upgrade.",
                    "published": "2024-09-02T18:15:36Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        },
        "20240304_142149": {
            "release_name": "vim (Build 2178) - (STABLE)",
            "commit_sha": "da0c9137d1ec96f4d79b818502d2f921a21f710e",
            "CVEs": [
                {
                    "id": "CVE-2024-41957",
                    "details": "Vim is an open source command line text editor. Vim < v9.1.0647 has double free in src/alloc.c:616. When closing a window, the corresponding tagstack data will be cleared and freed. However a bit later, the quickfix list belonging to that window will also be cleared and if that quickfix list points to the same tagstack data, Vim will try to free it again, resulting in a double-free/use-after-free access exception. Impact is low since the user must intentionally execute vim with several non-default flags,\nbut it may cause a crash of Vim. The issue has been fixed as of Vim patch v9.1.0647",
                    "published": "2024-08-01T22:15:29Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-41965",
                    "details": "Vim is an open source command line text editor. double-free in dialog_changed() in Vim < v9.1.0648. When abandoning a buffer, Vim may ask the user what to do with the modified buffer. If the user wants the changed buffer to be saved, Vim may create a new Untitled file, if the buffer did not have a name yet. However, when setting the buffer name to Unnamed, Vim will falsely free a pointer twice, leading to a double-free and possibly later to a heap-use-after-free, which can lead to a crash. The issue has been fixed as of Vim patch v9.1.0648.",
                    "published": "2024-08-01T22:15:29Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-43374",
                    "details": "The UNIX editor Vim prior to version 9.1.0678 has a use-after-free error in argument list handling. When adding a new file to the argument list, this triggers `Buf*` autocommands. If in such an autocommand the buffer that was just opened is closed (including the window where it is shown), this causes the window structure to be freed which contains a reference to the argument list that we are actually modifying. Once the autocommands are completed, the references to the window and argument list are no longer valid and as such cause an use-after-free. Impact is low since the user must either intentionally add some unusual autocommands that wipe a buffer during creation (either manually or by sourcing a malicious plugin), but it will crash Vim. The issue has been fixed as of Vim patch v9.1.0678.",
                    "published": "2024-08-16T02:15:17Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-43790",
                    "details": "Vim is an open source command line text editor. When performing a search and displaying the search-count message is disabled (:set shm+=S), the search pattern is displayed at the bottom of the screen in a buffer (msgbuf). When right-left mode (:set rl) is enabled, the search pattern is reversed. This happens by allocating a new buffer. If the search pattern contains some ASCII NUL characters, the buffer allocated will be smaller than the original allocated buffer (because for allocating the reversed buffer, the strlen() function is called, which only counts until it notices an ASCII NUL byte ) and thus the original length indicator is wrong. This causes an overflow when accessing characters inside the msgbuf by the previously (now wrong) length of the msgbuf. The issue has been fixed as of Vim patch v9.1.0689.",
                    "published": "2024-08-22T22:15:05Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-45306",
                    "details": "Vim is an open source, command line text editor. Patch v9.1.0038 optimized how the cursor position is calculated and removed a loop, that verified that the cursor position always points inside a line and does not become invalid by pointing beyond the end of\na line. Back then we assumed this loop is unnecessary. However, this change made it possible that the cursor position stays invalid and points beyond the end of a line, which would eventually cause a heap-buffer-overflow when trying to access the line pointer at\nthe specified cursor position. It's not quite clear yet, what can lead to this situation that the cursor points to an invalid position. That's why patch v9.1.0707 does not include a test case. The only observed impact has been a program crash. This issue has been addressed in with the patch v9.1.0707. All users are advised to upgrade.",
                    "published": "2024-09-02T18:15:36Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2024-47814",
                    "details": "Vim is an open source, command line text editor. A use-after-free was found in Vim < 9.1.0764. When closing a buffer (visible in a window) a BufWinLeave auto command can cause an use-after-free if this auto command happens to re-open the same buffer in a new split window. Impact is low since the user must have intentionally set up such a strange auto command and run some buffer unload commands. However this may lead to a crash. This issue has been addressed in version 9.1.0764 and all users are advised to upgrade. There are no known workarounds for this vulnerability.",
                    "published": "2024-10-07T22:15:03Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-1215",
                    "details": "A vulnerability classified as problematic was found in vim up to 9.1.1096. This vulnerability affects unknown code of the file src/main.c. The manipulation of the argument --log leads to memory corruption. It is possible to launch the attack on the local host. Upgrading to version 9.1.1097 is able to address this issue. The patch is identified as c5654b84480822817bb7b69ebc97c174c91185e9. It is recommended to upgrade the affected component.",
                    "published": "2025-02-12T19:15:10Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-22134",
                    "details": "When switching to other buffers using the :all command and visual mode still being active, this may cause a heap-buffer overflow, because Vim does not properly end visual mode and therefore may try to access beyond the end of a line in a buffer. In Patch 9.1.1003 Vim will correctly reset the visual mode before opening other windows and buffers and therefore fix this bug. In addition it does verify that it won't try to access a position if the position is greater than the corresponding buffer line. Impact is medium since the user must have switched on visual mode when executing the :all ex command. The Vim project would like to thank github user gandalf4a for reporting this issue. The issue has been fixed as of Vim patch v9.1.1003",
                    "published": "2025-01-13T21:15:14Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-24014",
                    "details": "Vim is an open source, command line text editor. A segmentation fault was found in Vim before 9.1.1043. In silent Ex mode (-s -e), Vim typically doesn't show a screen and just operates silently in batch mode. However, it is still possible to trigger the function that handles the scrolling of a gui version of Vim by feeding some binary characters to Vim. The function that handles the scrolling however may be triggering a redraw, which will access the ScreenLines pointer, even so this variable hasn't been allocated (since there is no screen). This vulnerability is fixed in 9.1.1043.",
                    "published": "2025-01-20T23:15:07Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-29768",
                    "details": "Vim, a text editor, is vulnerable to potential data loss with zip.vim and special crafted zip files in versions prior to 9.1.1198. The impact is medium because a user must be made to view such an archive with Vim and then press 'x' on such a strange filename. The issue has been fixed as of Vim patch v9.1.1198.",
                    "published": "2025-03-13T17:15:37Z",
                    "severity": "MEDIUM"
                },
                {
                    "id": "CVE-2025-55157",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1400, When processing nested tuples in Vim script, an error during evaluation can trigger a use-after-free in Vim\u2019s internal tuple reference management. Specifically, the tuple_unref() function may access already freed memory due to improper lifetime handling, leading to memory corruption. The exploit requires direct user interaction, as the script must be explicitly executed within Vim. This issue has been patched in version 9.1.1400.",
                    "published": "2025-08-11T23:15:27Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-55158",
                    "details": "Vim is an open source, command line text editor. In versions from 9.1.1231 to before 9.1.1406, when processing nested tuples during Vim9 script import operations, an error during evaluation can trigger a double-free in Vim\u2019s internal typed value (typval_T) management. Specifically, the clear_tv() function may attempt to free memory that has already been deallocated, due to improper lifetime handling in the handle_import / ex_import code paths. The vulnerability can only be triggered if a user explicitly opens and executes a specially crafted Vim script. This issue has been patched in version 9.1.1406.",
                    "published": "2025-08-11T23:15:28Z",
                    "severity": "HIGH"
                },
                {
                    "id": "CVE-2025-9390",
                    "details": "A security flaw has been discovered in vim up to 9.1.1615. Affected by this vulnerability is the function main of the file src/xxd/xxd.c of the component xxd. The manipulation results in buffer overflow. The attack requires a local approach. The exploit has been released to the public and may be exploited. Upgrading to version 9.1.1616 addresses this issue. The patch is identified as eeef7c77436a78cd27047b0f5fa6925d56de3cb0. It is recommended to upgrade the affected component.",
                    "published": "2025-08-24T14:15:32Z",
                    "severity": "MEDIUM"
                }
            ]
        }
    },
    "zlib": {
        "20250131_043441": {
            "release_name": "zlib (Build 2985) - (STABLE)",
            "commit_sha": "09155eaa2f9270dc4ed1fa13e2b4b2613e6e4851",
            "CVEs": [
                {
                    "id": "CVE-2023-45853",
                    "details": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
                    "published": "2023-10-14T02:15:09Z",
                    "severity": "CRITICAL"
                }
            ]
        },
        "20250130_125259": {
            "release_name": "zlib (Build 2930) - (STABLE)",
            "commit_sha": "09155eaa2f9270dc4ed1fa13e2b4b2613e6e4851",
            "CVEs": [
                {
                    "id": "CVE-2023-45853",
                    "details": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
                    "published": "2023-10-14T02:15:09Z",
                    "severity": "CRITICAL"
                }
            ]
        },
        "20241029_011951": {
            "release_name": "zlib (Build 2700) - (STABLE)",
            "commit_sha": "09155eaa2f9270dc4ed1fa13e2b4b2613e6e4851",
            "CVEs": [
                {
                    "id": "CVE-2023-45853",
                    "details": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
                    "published": "2023-10-14T02:15:09Z",
                    "severity": "CRITICAL"
                }
            ]
        },
        "20241002_005437": {
            "release_name": "zlib (Build 2529) - (STABLE)",
            "commit_sha": "09155eaa2f9270dc4ed1fa13e2b4b2613e6e4851",
            "CVEs": [
                {
                    "id": "CVE-2023-45853",
                    "details": "MiniZip in zlib through 1.3 has an integer overflow and resultant heap-based buffer overflow in zipOpenNewFileInZip4_64 via a long filename, comment, or extra field. NOTE: MiniZip is not a supported part of the zlib product. NOTE: pyminizip through 0.2.6 is also vulnerable because it bundles an affected zlib version, and exposes the applicable MiniZip code through its compress API.",
                    "published": "2023-10-14T02:15:09Z",
                    "severity": "CRITICAL"
                }
            ]
        }
    },
    "redis": {
        "20250627_111551": {
            "release_name": "redis (Build 3497) - (STABLE)",
            "commit_sha": "994bc96bb1744cb153392fc96bdba43eae56e17f",
            "CVEs": [
                {
                    "id": "CVE-2025-32023",
                    "details": "Redis is an open source, in-memory database that persists on disk. From 2.8 to before 8.0.3, 7.4.5, 7.2.10, and 6.2.19, an authenticated user may use a specially crafted string to trigger a stack/heap out of bounds write on hyperloglog operations, potentially leading to remote code execution. The bug likely affects all Redis versions with hyperloglog operations implemented. This vulnerability is fixed in 8.0.3, 7.4.5, 7.2.10, and 6.2.19. An additional workaround to mitigate the problem without patching the redis-server executable is to prevent users from executing hyperloglog operations. This can be done using ACL to restrict HLL commands.",
                    "published": "2025-07-07T16:15:22Z",
                    "severity": "HIGH"
                }
            ]
        },
        "20250617_062043": {
            "release_name": "redis (Build 3466) - (STABLE)",
            "commit_sha": "994bc96bb1744cb153392fc96bdba43eae56e17f",
            "CVEs": [
                {
                    "id": "CVE-2025-32023",
                    "details": "Redis is an open source, in-memory database that persists on disk. From 2.8 to before 8.0.3, 7.4.5, 7.2.10, and 6.2.19, an authenticated user may use a specially crafted string to trigger a stack/heap out of bounds write on hyperloglog operations, potentially leading to remote code execution. The bug likely affects all Redis versions with hyperloglog operations implemented. This vulnerability is fixed in 8.0.3, 7.4.5, 7.2.10, and 6.2.19. An additional workaround to mitigate the problem without patching the redis-server executable is to prevent users from executing hyperloglog operations. This can be done using ACL to restrict HLL commands.",
                    "published": "2025-07-07T16:15:22Z",
                    "severity": "HIGH"
                }
            ]
        },
        "20250604_154724": {
            "release_name": "redis (Build 3427) - (STABLE)",
            "commit_sha": "994bc96bb1744cb153392fc96bdba43eae56e17f",
            "CVEs": [
                {
                    "id": "CVE-2025-32023",
                    "details": "Redis is an open source, in-memory database that persists on disk. From 2.8 to before 8.0.3, 7.4.5, 7.2.10, and 6.2.19, an authenticated user may use a specially crafted string to trigger a stack/heap out of bounds write on hyperloglog operations, potentially leading to remote code execution. The bug likely affects all Redis versions with hyperloglog operations implemented. This vulnerability is fixed in 8.0.3, 7.4.5, 7.2.10, and 6.2.19. An additional workaround to mitigate the problem without patching the redis-server executable is to prevent users from executing hyperloglog operations. This can be done using ACL to restrict HLL commands.",
                    "published": "2025-07-07T16:15:22Z",
                    "severity": "HIGH"
                }
            ]
        },
        "20250423_015147": {
            "release_name": "redis (Build 3258) - (STABLE)",
            "commit_sha": "8468ded6679b2109ff926e5302d8db40ed42b4ee",
            "CVEs": [
                {
                    "id": "CVE-2025-27151",
                    "details": "Redis is an open source, in-memory database that persists on disk. In versions starting from 7.0.0 to before 8.0.2, a stack-based buffer overflow exists in redis-check-aof due to the use of memcpy with strlen(filepath) when copying a user-supplied file path into a fixed-size stack buffer. This allows an attacker to overflow the stack and potentially achieve code execution. This issue has been patched in version 8.0.2.",
                    "published": "2025-05-29T09:15:25Z",
                    "severity": "CRITICAL"
                },
                {
                    "id": "CVE-2025-32023",
                    "details": "Redis is an open source, in-memory database that persists on disk. From 2.8 to before 8.0.3, 7.4.5, 7.2.10, and 6.2.19, an authenticated user may use a specially crafted string to trigger a stack/heap out of bounds write on hyperloglog operations, potentially leading to remote code execution. The bug likely affects all Redis versions with hyperloglog operations implemented. This vulnerability is fixed in 8.0.3, 7.4.5, 7.2.10, and 6.2.19. An additional workaround to mitigate the problem without patching the redis-server executable is to prevent users from executing hyperloglog operations. This can be done using ACL to restrict HLL commands.",
                    "published": "2025-07-07T16:15:22Z",
                    "severity": "HIGH"
                }
            ]
        },
        "20250409_011848": {
            "release_name": "redis (Build 3219) - (STABLE)",
            "commit_sha": "eafc365040014d587df45d57467de3f86363111e",
            "CVEs": [
                {
                    "id": "CVE-2025-27151",
                    "details": "Redis is an open source, in-memory database that persists on disk. In versions starting from 7.0.0 to before 8.0.2, a stack-based buffer overflow exists in redis-check-aof due to the use of memcpy with strlen(filepath) when copying a user-supplied file path into a fixed-size stack buffer. This allows an attacker to overflow the stack and potentially achieve code execution. This issue has been patched in version 8.0.2.",
                    "published": "2025-05-29T09:15:25Z",
                    "severity": "CRITICAL"
                },
                {
                    "id": "CVE-2025-32023",
                    "details": "Redis is an open source, in-memory database that persists on disk. From 2.8 to before 8.0.3, 7.4.5, 7.2.10, and 6.2.19, an authenticated user may use a specially crafted string to trigger a stack/heap out of bounds write on hyperloglog operations, potentially leading to remote code execution. The bug likely affects all Redis versions with hyperloglog operations implemented. This vulnerability is fixed in 8.0.3, 7.4.5, 7.2.10, and 6.2.19. An additional workaround to mitigate the problem without patching the redis-server executable is to prevent users from executing hyperloglog operations. This can be done using ACL to restrict HLL commands.",
                    "published": "2025-07-07T16:15:22Z",
                    "severity": "HIGH"
                }
            ]
        }
    },
    "githubcli": {
        "20250131_053234": {
            "release_name": "githubcli (Build 2995) - (STABLE)",
            "commit_sha": "b8a1ff6e70dc9bbe12a8ffdb5644889de6be48a4",
            "CVEs": [
                {
                    "id": "CVE-2024-52308",
                    "details": "The GitHub CLI version 2.6.1 and earlier are vulnerable to remote code execution through a malicious codespace SSH server when using `gh codespace ssh` or `gh codespace logs` commands. This has been patched in the cli v2.62.0.\n\nDevelopers connect to remote codespaces through an SSH server running within the devcontainer, which is generally provided through the [default devcontainer image]( https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/adding-a-dev-container-... https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/adding-a-dev-container-configuration/introduction-to-dev-containers#using-the-default-dev-container-configuration) . GitHub CLI [retrieves SSH connection details]( https://github.com/cli/cli/blob/30066b0042d0c5928d959e288144300cb28196c9/internal/codespaces/rpc/inv... https://github.com/cli/cli/blob/30066b0042d0c5928d959e288144300cb28196c9/internal/codespaces/rpc/invoker.go#L230-L244 ), such as remote username, which is used in [executing `ssh` commands]( https://github.com/cli/cli/blob/e356c69a6f0125cfaac782c35acf77314f18908d/pkg/cmd/codespace/ssh.go#L2... https://github.com/cli/cli/blob/e356c69a6f0125cfaac782c35acf77314f18908d/pkg/cmd/codespace/ssh.go#L263 ) for `gh codespace ssh` or `gh codespace logs` commands.\n\nThis exploit occurs when a malicious third-party devcontainer contains a modified SSH server that injects `ssh` arguments within the SSH connection details. `gh codespace ssh` and `gh codespace logs` commands could execute arbitrary code on the user's workstation if the remote username contains something like `-oProxyCommand=\"echo hacked\" #`.  The `-oProxyCommand` flag causes `ssh` to execute the provided command while `#` shell comment causes any other `ssh` arguments to be ignored.\n\nIn `2.62.0`, the remote username information is being validated before being used.",
                    "published": "2024-11-14T23:15:05Z",
                    "severity": "CRITICAL"
                }
            ]
        },
        "20241002_030701": {
            "release_name": "githubcli (Build 2573) - (DEV)",
            "commit_sha": "8ba31ddb38810ac05350842a0fd11d899d854e04",
            "CVEs": [
                {
                    "id": "CVE-2024-52308",
                    "details": "The GitHub CLI version 2.6.1 and earlier are vulnerable to remote code execution through a malicious codespace SSH server when using `gh codespace ssh` or `gh codespace logs` commands. This has been patched in the cli v2.62.0.\n\nDevelopers connect to remote codespaces through an SSH server running within the devcontainer, which is generally provided through the [default devcontainer image]( https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/adding-a-dev-container-... https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/adding-a-dev-container-configuration/introduction-to-dev-containers#using-the-default-dev-container-configuration) . GitHub CLI [retrieves SSH connection details]( https://github.com/cli/cli/blob/30066b0042d0c5928d959e288144300cb28196c9/internal/codespaces/rpc/inv... https://github.com/cli/cli/blob/30066b0042d0c5928d959e288144300cb28196c9/internal/codespaces/rpc/invoker.go#L230-L244 ), such as remote username, which is used in [executing `ssh` commands]( https://github.com/cli/cli/blob/e356c69a6f0125cfaac782c35acf77314f18908d/pkg/cmd/codespace/ssh.go#L2... https://github.com/cli/cli/blob/e356c69a6f0125cfaac782c35acf77314f18908d/pkg/cmd/codespace/ssh.go#L263 ) for `gh codespace ssh` or `gh codespace logs` commands.\n\nThis exploit occurs when a malicious third-party devcontainer contains a modified SSH server that injects `ssh` arguments within the SSH connection details. `gh codespace ssh` and `gh codespace logs` commands could execute arbitrary code on the user's workstation if the remote username contains something like `-oProxyCommand=\"echo hacked\" #`.  The `-oProxyCommand` flag causes `ssh` to execute the provided command while `#` shell comment causes any other `ssh` arguments to be ignored.\n\nIn `2.62.0`, the remote username information is being validated before being used.",
                    "published": "2024-11-14T23:15:05Z",
                    "severity": "CRITICAL"
                }
            ]
        },
        "20241002_015510": {
            "release_name": "githubcli (Build 2550) - (STABLE)",
            "commit_sha": "b8a1ff6e70dc9bbe12a8ffdb5644889de6be48a4",
            "CVEs": [
                {
                    "id": "CVE-2024-52308",
                    "details": "The GitHub CLI version 2.6.1 and earlier are vulnerable to remote code execution through a malicious codespace SSH server when using `gh codespace ssh` or `gh codespace logs` commands. This has been patched in the cli v2.62.0.\n\nDevelopers connect to remote codespaces through an SSH server running within the devcontainer, which is generally provided through the [default devcontainer image]( https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/adding-a-dev-container-... https://docs.github.com/en/codespaces/setting-up-your-project-for-codespaces/adding-a-dev-container-configuration/introduction-to-dev-containers#using-the-default-dev-container-configuration) . GitHub CLI [retrieves SSH connection details]( https://github.com/cli/cli/blob/30066b0042d0c5928d959e288144300cb28196c9/internal/codespaces/rpc/inv... https://github.com/cli/cli/blob/30066b0042d0c5928d959e288144300cb28196c9/internal/codespaces/rpc/invoker.go#L230-L244 ), such as remote username, which is used in [executing `ssh` commands]( https://github.com/cli/cli/blob/e356c69a6f0125cfaac782c35acf77314f18908d/pkg/cmd/codespace/ssh.go#L2... https://github.com/cli/cli/blob/e356c69a6f0125cfaac782c35acf77314f18908d/pkg/cmd/codespace/ssh.go#L263 ) for `gh codespace ssh` or `gh codespace logs` commands.\n\nThis exploit occurs when a malicious third-party devcontainer contains a modified SSH server that injects `ssh` arguments within the SSH connection details. `gh codespace ssh` and `gh codespace logs` commands could execute arbitrary code on the user's workstation if the remote username contains something like `-oProxyCommand=\"echo hacked\" #`.  The `-oProxyCommand` flag causes `ssh` to execute the provided command while `#` shell comment causes any other `ssh` arguments to be ignored.\n\nIn `2.62.0`, the remote username information is being validated before being used.",
                    "published": "2024-11-14T23:15:05Z",
                    "severity": "CRITICAL"
                }
            ]
        }
    },
    "grafana": {
        "20240521_113658": {
            "release_name": "grafana (Build 2267) - (STABLE)",
            "commit_sha": "277ef258d4b9a5acdf2932347c6a4ca72d739b28",
            "CVEs": [
                {
                    "id": "CVE-2024-9264",
                    "details": "The SQL Expressions experimental feature of Grafana allows for the evaluation of `duckdb` queries containing user input. These queries are insufficiently sanitized before being passed to `duckdb`, leading to a command injection and local file inclusion vulnerability. Any user with the VIEWER or higher permission is capable of executing this attack.  The `duckdb` binary must be present in Grafana's $PATH for this attack to function; by default, this binary is not installed in Grafana distributions.",
                    "published": "2024-10-18T04:15:04Z",
                    "severity": "HIGH"
                }
            ]
        }
    }
}